// author: Matthew Hird
// csciId: hirdm
// date: Jan 13, 2019
// links: 

Uncaught TypeError: Cannot read property 'value' of undefined
    at compute (errors.js:38)
    at HTMLButtonElement.onclick (Lab4.html:137)
compute @ errors.js:38
onclick @ Lab4.html:137

When assigning "x" a value in the "compute()" function, the "xVal" <input> element
is supposed to be accessed. The function is trying to get the element by classname, but
is using the name attribute instead. Since there is no class with the name "xVal", "xVal"
returns as undefined. Since undefined values have no properties, this error is thrown.
The "xVal" input element needs to be given a unique id value in "Lab4.html". Then in
the JavaScript code, it needs to be accessed using "getElementById()" method. 


Uncaught TypeError: Cannot read property 'value' of undefined
    at compute (errors.js:39)
    at HTMLButtonElement.onclick (Lab4.html:137)
compute @ errors.js:39
onclick @ Lab4.html:137

When assigning "y" a value in the "compute()" function, the "yVal" <input> element
is supposed to be accessed. The function is trying to get the element by classname, but
is using the name attribute instead. Since there is no class with the name "yVal", "yVal"
returns as undefined. Since undefined values have no properties, this error is thrown.
The "yVal" input element needs to be given a unique id value in "Lab4.html". Then in
the JavaScript code, it needs to be accessed using "getElementById()" method.


Uncaught TypeError: Cannot set property 'value' of undefined
    at compute (errors.js:43)
    at HTMLButtonElement.onclick (Lab4.html:137)
compute @ errors.js:43
onclick @ Lab4.html:137

The "ans" value in the "compute()" function is supposed to be assignned to the "answer" 
<input> element. The function is trying to get the element by classname, but is using the name attribute instead. Since there is no class with the name "answer", "answer"
returns as undefined. Since undefined values have no properties, this error is thrown.
The "answer" input element needs to be given a unique id value in "Lab4.html". Then in
the JavaScript code, it needs to be accessed using "getElementById()" method.


The specified value "NaN" is not a valid number. The value must match to the following regular expression: -?(\d+|\d+\.\d+|\.\d+)([eE][-+]?\d+)?
compute @ errors.js:47
onclick @ Lab4.html:137

This warning happens when either x or y has a value and the other does not and the compute button
is pressed. This is because x and y dont have default values and "compute()" tries to add them
together even if the fields are empty. This can be avoided either by giving the xVal and yVal 
fields default values, or by checking where the fields are filled out in the "compute()" function.
*update* Even with a default value, the user can still delete the contents of the number box and
hit compute, resulting in a warning. The only way to avoid it is to check whether the answer is NaN
before attempting to set answer.